vim.g.mapleader = " "
local dap = require("dap")
vim.keymap.set("n", "<leader>e", vim.cmd.Ex)
local opts = { buffer = bufnr, remap = false }

vim.keymap.set("n", "gd", function()
	vim.lsp.buf.definition()
end, opts)
vim.keymap.set("n", "K", function()
	vim.lsp.buf.hover()
end, opts)
vim.keymap.set("n", "<leader>d", function()
	vim.diagnostic.open_float()
end, opts)
vim.keymap.set("n", "[d", function()
	vim.diagnostic.goto_next()
end, opts)
vim.keymap.set("n", "]d", function()
	vim.diagnostic.goto_prev()
end, opts)
vim.keymap.set("n", "<leader>la", function()
	vim.lsp.buf.code_action()
end, opts)
vim.keymap.set("n", "<leader>r", function()
	vim.lsp.buf.references()
end, opts)
vim.keymap.set("n", "<leader>lf", function()
	vim.lsp.buf.format()
end, opts)
vim.keymap.set("n", "<leader>t", function()
	vim.cmd("ToggleTerm size=10")
end, opts)
vim.keymap.set("n", "<leader>f", function()
	vim.cmd("FormatWrite")
end, opts)
vim.keymap.set("n", "<leader>w", function()
	dap.toggle_breakpoint()
end, opts)
vim.keymap.set("n", "<leader>c", function()
	dap.continue()
end, opts)
vim.keymap.set("n", "<leader>s", function()
	dap.step_into()
end, opts)
vim.keymap.set("n", "<leader>n", function()
	dap.repl.open()
end, opts)
local widgets = require("dap.ui.widgets")
local my_sidebar = widgets.sidebar(widgets.scopes)
vim.keymap.set("n", "<leader>q", function()
	my_sidebar.open()
end, opts)
